{"ast":null,"code":"var _jsxFileName = \"/home/balazs/ReactJs/myna/components/Ping.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Cookies from 'universal-cookie';\nimport { API_SERVER } from '../src/constants';\nconst cookies = new Cookies(); //const hash = cookies.get('hash');\n\nconst session = cookies.get('session');\nexport default class Ping extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      session: ''\n    };\n    this.ping = this.ping.bind(this);\n  }\n\n  ping() {\n    if (session == 'undefined') {\n      fetch(API_SERVER + 'listen.php?part=ping').then(response => response.json()).then(output => {\n        let data = output;\n        let tmp = data['sessiontoken'];\n        cookies.set(\"session\", tmp, {\n          maxAge: 86400\n        });\n      }).catch(error => console.log(error.message));\n    }\n\n    if (session != 'undefined') {\n      fetch(API_SERVER + 'listen.php?part=ping&sessiontoken=' + session).then(response => response.json()).then(output => {\n        let data = output;\n        let tmp = data['sessiontoken'];\n        cookies.set(\"session\", tmp, {\n          maxAge: 86400\n        });\n      }).catch(error => console.log(error.message));\n    }\n  }\n\n  componentDidMount() {\n    this.ping();\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/balazs/ReactJs/myna/components/Ping.js"],"names":["React","Component","Cookies","API_SERVER","cookies","session","get","Ping","constructor","props","state","ping","bind","fetch","then","response","json","output","data","tmp","set","maxAge","catch","error","console","log","message","componentDidMount","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAAQC,UAAR,QAAuC,kBAAvC;AACA,MAAMC,OAAO,GAAG,IAAIF,OAAJ,EAAhB,C,CACA;;AACA,MAAMG,OAAO,GAAGD,OAAO,CAACE,GAAR,CAAY,SAAZ,CAAhB;AAEA,eAAe,MAAMC,IAAN,SAAmBN,SAAnB,CAA6B;AAC1CO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXL,MAAAA,OAAO,EAAE;AADE,KAAb;AAGA,SAAKM,IAAL,GAAY,KAAKA,IAAL,CAAUC,IAAV,CAAe,IAAf,CAAZ;AACD;;AACDD,EAAAA,IAAI,GAAG;AACL,QAAIN,OAAO,IAAI,WAAf,EAA4B;AAC1BQ,MAAAA,KAAK,CAACV,UAAU,GAAG,sBAAd,CAAL,CACCW,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAEDF,IAFC,CAEIG,MAAM,IAAI;AACZ,YAAIC,IAAI,GAAGD,MAAX;AACA,YAAIE,GAAG,GAAGD,IAAI,CAAC,cAAD,CAAd;AACAd,QAAAA,OAAO,CAACgB,GAAR,CAAY,SAAZ,EAAuBD,GAAvB,EAA4B;AAAEE,UAAAA,MAAM,EAAE;AAAV,SAA5B;AACD,OAND,EAOCC,KAPD,CAOOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB,CAPhB;AAQD;;AACD,QAAIrB,OAAO,IAAI,WAAf,EAA4B;AAC1BQ,MAAAA,KAAK,CAACV,UAAU,GAAG,oCAAb,GAAoDE,OAArD,CAAL,CACCS,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAEDF,IAFC,CAEIG,MAAM,IAAI;AACZ,YAAIC,IAAI,GAAGD,MAAX;AACA,YAAIE,GAAG,GAAGD,IAAI,CAAC,cAAD,CAAd;AACAd,QAAAA,OAAO,CAACgB,GAAR,CAAY,SAAZ,EAAuBD,GAAvB,EAA4B;AAAEE,UAAAA,MAAM,EAAE;AAAV,SAA5B;AACD,OAND,EAOCC,KAPD,CAOOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB,CAPhB;AAQD;AACF;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKhB,IAAL;AACD;;AACDiB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AArCyC","sourcesContent":["import React, { Component } from 'react';\nimport Cookies from 'universal-cookie';\nimport {API_SERVER as API_SERVER} from '../src/constants';\nconst cookies = new Cookies();\n//const hash = cookies.get('hash');\nconst session = cookies.get('session');\n\nexport default class Ping extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      session: ''\n    };\n    this.ping = this.ping.bind(this);\n  }\n  ping() {\n    if (session == 'undefined') {\n      fetch(API_SERVER + 'listen.php?part=ping')\n      .then(response => response.json())\n  \t\t.then(output => {\n        let data = output;\n        let tmp = data['sessiontoken'];\n        cookies.set(\"session\", tmp, { maxAge: 86400 });\n      })\n      .catch(error => console.log(error.message));\n    }\n    if (session != 'undefined') {\n      fetch(API_SERVER + 'listen.php?part=ping&sessiontoken=' + session)\n      .then(response => response.json())\n  \t\t.then(output => {\n        let data = output;\n        let tmp = data['sessiontoken'];\n        cookies.set(\"session\", tmp, { maxAge: 86400 });\n      })\n      .catch(error => console.log(error.message));\n    }\n  }\n  componentDidMount() {\n    this.ping ();\n  }\n  render() {\n    return (\n      <div></div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}