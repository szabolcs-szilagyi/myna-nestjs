{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/balazs/ReactJs/myna/components/Router.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"next/router\"; // A simple component that shows the pathname of the current location\n\nvar ShowTheLocation = /*#__PURE__*/function (_React$Component) {\n  _inherits(ShowTheLocation, _React$Component);\n\n  var _super = _createSuper(ShowTheLocation);\n\n  function ShowTheLocation() {\n    _classCallCheck(this, ShowTheLocation);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ShowTheLocation, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          match = _this$props.match,\n          location = _this$props.location,\n          history = _this$props.history;\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 12\n        }\n      }, \"You are now at \", location.pathname);\n    }\n  }]);\n\n  return ShowTheLocation;\n}(React.Component); // Create a new component that is \"connected\" (to borrow redux\n// terminology) to the router.\n\n\n_defineProperty(ShowTheLocation, \"propTypes\", {\n  match: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n});\n\nvar ShowTheLocationWithRouter = withRouter(ShowTheLocation);\n_c = ShowTheLocationWithRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowTheLocationWithRouter\");","map":{"version":3,"sources":["/home/balazs/ReactJs/myna/components/Router.js"],"names":["React","PropTypes","withRouter","ShowTheLocation","props","match","location","history","pathname","Component","object","isRequired","ShowTheLocationWithRouter"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,aAA3B,C,CAEA;;IACMC,e;;;;;;;;;;;;;6BAOK;AAAA,wBAC8B,KAAKC,KADnC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,QADR,eACQA,QADR;AAAA,UACkBC,OADlB,eACkBA,OADlB;AAGP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAqBD,QAAQ,CAACE,QAA9B,CAAP;AACD;;;;EAX2BR,KAAK,CAACS,S,GAcpC;AACA;;;gBAfMN,e,eACe;AACjBE,EAAAA,KAAK,EAAEJ,SAAS,CAACS,MAAV,CAAiBC,UADP;AAEjBL,EAAAA,QAAQ,EAAEL,SAAS,CAACS,MAAV,CAAiBC,UAFV;AAGjBJ,EAAAA,OAAO,EAAEN,SAAS,CAACS,MAAV,CAAiBC;AAHT,C;;AAerB,IAAMC,yBAAyB,GAAGV,UAAU,CAACC,eAAD,CAA5C;KAAMS,yB","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"next/router\";\n\n// A simple component that shows the pathname of the current location\nclass ShowTheLocation extends React.Component {\n  static propTypes = {\n    match: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired\n  };\n\n  render() {\n    const { match, location, history } = this.props;\n\n    return <div>You are now at {location.pathname}</div>;\n  }\n}\n\n// Create a new component that is \"connected\" (to borrow redux\n// terminology) to the router.\nconst ShowTheLocationWithRouter = withRouter(ShowTheLocation);\n"]},"metadata":{},"sourceType":"module"}