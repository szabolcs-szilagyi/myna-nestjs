{"ast":null,"code":"var _jsxFileName = \"/home/balazs/ReactJs/myna/components/Paypal.js\";\nvar __jsx = React.createElement;\nimport React, { useState, Component } from 'react';\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport Cookies from 'universal-cookie';\nimport { API_SERVER } from '../src/constants';\nconst cookies = new Cookies();\nconst session = cookies.get('session');\nexport default class Example extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      price: ''\n    };\n    this.getPrice = this.getPrice.bind(this);\n    this.completed = this.completed.bind(this);\n  }\n\n  getPrice() {\n    fetch(API_SERVER + 'listen.php?part=totalcheckout&sessiontoken=' + session).then(response => response.json()).then(output => {\n      let data = output;\n      let tmp = data['topay'];\n      this.setState({\n        price: tmp\n      });\n    }).catch(error => console.log(error.message));\n  }\n\n  completed() {\n    fetch(API_SERVER + 'listen.php?part=setproductpaid&sessiontoken=' + session, {\n      mode: 'no-cors'\n    });\n  }\n\n  componentDidMount() {\n    this.getPrice();\n  }\n\n  render() {\n    return __jsx(PayPalButton, {\n      amount: this.state.price // shippingPreference=\"NO_SHIPPING\" // default is \"GET_FROM_FILE\"\n      ,\n      onSuccess: (details, data) => {\n        // here to write the SUCCESS script\n        this.completed();\n        alert(\"We will contact you in email\"); // OPTIONAL: Call your server to save the transaction\n        //    return fetch(\"/paypal-transaction-complete\", {\n        //        method: \"post\",\n        //        body: JSON.stringify({\n        //            orderId: data.orderID\n        //        })\n        //    });\n      },\n      options: {\n        clientId: \"AQIX4lwiUlCsoo671-JWES0SJ7BNGhkM7MpIwBRiUn4Xzk-4oXPjhpDWVyaxrReLfH5XYcTLorzlPTAu\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/balazs/ReactJs/myna/components/Paypal.js"],"names":["React","useState","Component","PayPalButton","Cookies","API_SERVER","cookies","session","get","Example","constructor","props","state","price","getPrice","bind","completed","fetch","then","response","json","output","data","tmp","setState","catch","error","console","log","message","mode","componentDidMount","render","details","alert","clientId"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAAQC,UAAR,QAAuC,kBAAvC;AACA,MAAMC,OAAO,GAAG,IAAIF,OAAJ,EAAhB;AACA,MAAMG,OAAO,GAAGD,OAAO,CAACE,GAAR,CAAY,SAAZ,CAAhB;AAEA,eAAe,MAAMC,OAAN,SAAsBP,SAAtB,CAAgC;AAC7CQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;AACD;;AAEDD,EAAAA,QAAQ,GAAI;AACVG,IAAAA,KAAK,CAACZ,UAAU,GAAG,6CAAb,GAA6DE,OAA9D,CAAL,CACCW,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAEDF,IAFC,CAEIG,MAAM,IAAI;AACZ,UAAIC,IAAI,GAAGD,MAAX;AACA,UAAIE,GAAG,GAAGD,IAAI,CAAC,OAAD,CAAd;AACA,WAAKE,QAAL,CAAc;AAAEX,QAAAA,KAAK,EAAEU;AAAT,OAAd;AACD,KAND,EAOCE,KAPD,CAOOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB,CAPhB;AAQD;;AACDb,EAAAA,SAAS,GAAI;AACXC,IAAAA,KAAK,CAACZ,UAAU,GAAG,8CAAb,GAA8DE,OAA/D,EAAwE;AAACuB,MAAAA,IAAI,EAAE;AAAP,KAAxE,CAAL;AAED;;AACDC,EAAAA,iBAAiB,GAAI;AACnB,SAAKjB,QAAL;AACD;;AAECkB,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,YAAD;AACI,MAAA,MAAM,EAAE,KAAKpB,KAAL,CAAWC,KADvB,CAEI;AAFJ;AAGI,MAAA,SAAS,EAAE,CAACoB,OAAD,EAAUX,IAAV,KAAmB;AAC1B;AACA,aAAKN,SAAL;AACAkB,QAAAA,KAAK,CAAC,8BAAD,CAAL,CAH0B,CAK1B;AACJ;AACA;AACA;AACA;AACA;AACA;AACC,OAfL;AAgBI,MAAA,OAAO,EAAE;AACLC,QAAAA,QAAQ,EAAE;AADL,OAhBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAsBH;;AAnD0C","sourcesContent":["import React, { useState, Component } from 'react';\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport Cookies from 'universal-cookie';\nimport {API_SERVER as API_SERVER} from '../src/constants';\nconst cookies = new Cookies();\nconst session = cookies.get('session');\n\nexport default class Example extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      price: ''\n    };\n    this.getPrice = this.getPrice.bind(this);\n    this.completed = this.completed.bind(this);\n  }\n\n  getPrice () {\n    fetch(API_SERVER + 'listen.php?part=totalcheckout&sessiontoken=' + session)\n    .then(response => response.json())\n\t\t.then(output => {\n      let data = output;\n      let tmp = data['topay'];\n      this.setState({ price: tmp });\n    })\n    .catch(error => console.log(error.message));\n  }\n  completed () {\n    fetch(API_SERVER + 'listen.php?part=setproductpaid&sessiontoken=' + session, {mode: 'no-cors'})\n\n  }\n  componentDidMount () {\n    this.getPrice ();\n  }\n\n    render() {\n        return (\n            <PayPalButton\n                amount={this.state.price}\n                // shippingPreference=\"NO_SHIPPING\" // default is \"GET_FROM_FILE\"\n                onSuccess={(details, data) => {\n                    // here to write the SUCCESS script\n                    this.completed ();\n                    alert(\"We will contact you in email\");\n\n                    // OPTIONAL: Call your server to save the transaction\n                //    return fetch(\"/paypal-transaction-complete\", {\n                //        method: \"post\",\n                //        body: JSON.stringify({\n                //            orderId: data.orderID\n                //        })\n                //    });\n                }}\n                options={{\n                    clientId: \"AQIX4lwiUlCsoo671-JWES0SJ7BNGhkM7MpIwBRiUn4Xzk-4oXPjhpDWVyaxrReLfH5XYcTLorzlPTAu\"\n                }}\n            />\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}