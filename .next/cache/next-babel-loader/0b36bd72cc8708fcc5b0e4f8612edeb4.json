{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/balazs/ReactJs/myna/components/Paypal.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, Component } from 'react';\nimport { PayPalButton } from \"react-paypal-button-v2\";\n\nvar Example = /*#__PURE__*/function (_Component) {\n  _inherits(Example, _Component);\n\n  var _super = _createSuper(Example);\n\n  function Example() {\n    _classCallCheck(this, Example);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Example, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(PayPalButton, {\n        amount: \"0.01\" // shippingPreference=\"NO_SHIPPING\" // default is \"GET_FROM_FILE\"\n        ,\n        onSuccess: function onSuccess(details, data) {\n          alert(\"Transaction completed by \" + details.payer.name.given_name); // OPTIONAL: Call your server to save the transaction\n\n          return fetch(\"/paypal-transaction-complete\", {\n            method: \"post\",\n            body: JSON.stringify({\n              orderId: data.orderID\n            })\n          });\n        },\n        options: {\n          clientId: \"PRODUCTION_CLIENT_ID\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return Example;\n}(Component);\n\nexport { Example as default };","map":{"version":3,"sources":["/home/balazs/ReactJs/myna/components/Paypal.js"],"names":["React","useState","Component","PayPalButton","Example","details","data","alert","payer","name","given_name","fetch","method","body","JSON","stringify","orderId","orderID","clientId"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,wBAA7B;;IAEqBC,O;;;;;;;;;;;;;6BACR;AACL,aACI,MAAC,YAAD;AACI,QAAA,MAAM,EAAC,MADX,CAEI;AAFJ;AAGI,QAAA,SAAS,EAAE,mBAACC,OAAD,EAAUC,IAAV,EAAmB;AAC1BC,UAAAA,KAAK,CAAC,8BAA8BF,OAAO,CAACG,KAAR,CAAcC,IAAd,CAAmBC,UAAlD,CAAL,CAD0B,CAG1B;;AACA,iBAAOC,KAAK,CAAC,8BAAD,EAAiC;AACzCC,YAAAA,MAAM,EAAE,MADiC;AAEzCC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,cAAAA,OAAO,EAAEV,IAAI,CAACW;AADG,aAAf;AAFmC,WAAjC,CAAZ;AAMH,SAbL;AAcI,QAAA,OAAO,EAAE;AACLC,UAAAA,QAAQ,EAAE;AADL,SAdb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAoBH;;;;EAtBgChB,S;;SAAhBE,O","sourcesContent":["import React, { useState, Component } from 'react';\nimport { PayPalButton } from \"react-paypal-button-v2\";\n\nexport default class Example extends Component {\n    render() {\n        return (\n            <PayPalButton\n                amount=\"0.01\"\n                // shippingPreference=\"NO_SHIPPING\" // default is \"GET_FROM_FILE\"\n                onSuccess={(details, data) => {\n                    alert(\"Transaction completed by \" + details.payer.name.given_name);\n\n                    // OPTIONAL: Call your server to save the transaction\n                    return fetch(\"/paypal-transaction-complete\", {\n                        method: \"post\",\n                        body: JSON.stringify({\n                            orderId: data.orderID\n                        })\n                    });\n                }}\n                options={{\n                    clientId: \"PRODUCTION_CLIENT_ID\"\n                }}\n            />\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}