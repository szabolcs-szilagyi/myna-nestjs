{"ast":null,"code":"var _jsxFileName = \"/home/balazs/ReactJs/myna/pages/autologin.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { API_SERVER } from '../src/constants';\nimport fetch from 'isomorphic-unfetch';\nimport Cookies from 'universal-cookie';\nconst cookies = new Cookies();\nconst session = cookies.get('session');\nexport default class Ping extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      session: ''\n    };\n    this.handleRequest = this.handleRequest.bind(this);\n    this.redirect = this.redirect.bind(this);\n  }\n\n  handleRequest() {\n    let searchParams = new URLSearchParams(window.location.search);\n\n    if (searchParams.has('part')) {\n      let part = searchParams.get('part');\n\n      if (part == \"login\") {\n        if (searchParams.has('token')) {\n          let token = searchParams.get('token');\n          let email = searchParams.get('email');\n          fetch(API_SERVER + 'listen.php?part=login&logintoken=' + token + '&email=' + email + '&sessiontoken' + session, {\n            mode: 'no-cors'\n          });\n        }\n      }\n    }\n  }\n\n  redirect() {\n    window.location.href = \"/my-account\";\n  }\n\n  componentDidMount() {\n    setTimeout(this.handleRequest, 100);\n    setTimeout(this.redirect, 500);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/balazs/ReactJs/myna/pages/autologin.js"],"names":["React","Component","API_SERVER","fetch","Cookies","cookies","session","get","Ping","constructor","props","state","handleRequest","bind","redirect","searchParams","URLSearchParams","window","location","search","has","part","token","email","mode","href","componentDidMount","setTimeout","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,UAAR,QAAuC,kBAAvC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,MAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB;AACA,MAAME,OAAO,GAAGD,OAAO,CAACE,GAAR,CAAY,SAAZ,CAAhB;AAEA,eAAe,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AAC1CQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXL,MAAAA,OAAO,EAAE;AADE,KAAb;AAGA,SAAKM,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AACDD,EAAAA,aAAa,GAAI;AACf,QAAIG,YAAY,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAnB;;AACA,QAAIJ,YAAY,CAACK,GAAb,CAAiB,MAAjB,CAAJ,EAA8B;AAC5B,UAAIC,IAAI,GAAGN,YAAY,CAACR,GAAb,CAAiB,MAAjB,CAAX;;AAEA,UAAIc,IAAI,IAAI,OAAZ,EAAqB;AACnB,YAAIN,YAAY,CAACK,GAAb,CAAiB,OAAjB,CAAJ,EAA+B;AAC7B,cAAIE,KAAK,GAAGP,YAAY,CAACR,GAAb,CAAiB,OAAjB,CAAZ;AACA,cAAIgB,KAAK,GAAGR,YAAY,CAACR,GAAb,CAAiB,OAAjB,CAAZ;AACAJ,UAAAA,KAAK,CAACD,UAAU,GAAG,mCAAb,GAAmDoB,KAAnD,GAA2D,SAA3D,GAAuEC,KAAvE,GAA+E,eAA/E,GAAiGjB,OAAlG,EAA2G;AAACkB,YAAAA,IAAI,EAAE;AAAP,WAA3G,CAAL;AACD;AACF;AAEF;AACF;;AACDV,EAAAA,QAAQ,GAAI;AACVG,IAAAA,MAAM,CAACC,QAAP,CAAgBO,IAAhB,GAAuB,aAAvB;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,UAAU,CAAC,KAAKf,aAAN,EAAqB,GAArB,CAAV;AACAe,IAAAA,UAAU,CAAC,KAAKb,QAAN,EAAgB,GAAhB,CAAV;AACD;;AACDc,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAnCyC","sourcesContent":["import React, { Component } from 'react';\nimport {API_SERVER as API_SERVER} from '../src/constants';\nimport fetch from 'isomorphic-unfetch';\nimport Cookies from 'universal-cookie';\nconst cookies = new Cookies();\nconst session = cookies.get('session');\n\nexport default class Ping extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      session: ''\n    };\n    this.handleRequest = this.handleRequest.bind(this);\n    this.redirect = this.redirect.bind(this);\n  }\n  handleRequest () {\n    let searchParams = new URLSearchParams(window.location.search);\n    if (searchParams.has('part')) {\n      let part = searchParams.get('part');\n\n      if (part == \"login\") {\n        if (searchParams.has('token')) {\n          let token = searchParams.get('token');\n          let email = searchParams.get('email');\n          fetch(API_SERVER + 'listen.php?part=login&logintoken=' + token + '&email=' + email + '&sessiontoken' + session, {mode: 'no-cors'});\n        }\n      }\n\n    }\n  }\n  redirect () {\n    window.location.href = \"/my-account\";\n  }\n  componentDidMount() {\n    setTimeout(this.handleRequest, 100);\n    setTimeout(this.redirect, 500);\n  }\n  render() {\n    return (\n      <div></div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}